plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.youtube_clone"
    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    flavorDimensions "environment"
    productFlavors {
        // Uncomment "applicationIdSuffix" lines if multiple applicationId has been created
        // for project
        dev {
            dimension "environment"
            //applicationIdSuffix ".dev"
        }
        // Dev environment without Firebase
        devWithoutFB {
            dimension "environment"
            //applicationIdSuffix ".dev.without.firebase"
        }
        staging {
            dimension "environment"
            //applicationIdSuffix ".staging"
        }
        prod {
            dimension "environment"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = 17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.youtube_clone"
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    def activity_version = "1.9.0"

    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"
    // Uncomment for photo_manager
    // implementation 'com.github.bumptech.glide:glide:4.15.1'
    // ksp 'com.github.bumptech.glide:compiler:4.15.0'
}

// Apply Google services plugin only for flavors that require Firebase
if (gradle.startParameter.taskRequests.toString().contains("prod")) {
    apply plugin: 'com.google.gms.google-services'
}
